buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven { 
            url 'https://esri.bintray.com/arcgis' 
        }
    }
    dependencies {
        classpath 'com.google.gradle:osdetector-gradle-plugin:1.6.0'
        classpath 'com.esri.arcgisruntime:gradle-arcgis-java-plugin:1.0.0'
    }
}

apply plugin: 'application'
apply plugin: 'com.google.osdetector'
apply plugin: 'com.esri.arcgisruntime.java'

ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os

arcgis.version = '100.5.0-2245'
arcgis.internal = true

group = 'com.esri.samples'
version = '100.4.0'

compileJava.options.encoding = 'UTF-8'

repositories {
    jcenter()
    maven {
        url 'https://esri.bintray.com/arcgis'
    }
}

dependencies {
    compile 'com.esri.arcgisruntime:arcgis-java-toolkit:100.2.1'
    compile 'commons-io:commons-io:2.4'
    compile 'org.jooq:joox:1.4.0'
    compile "org.openjfx:javafx-base:11:$platform"
    compile "org.openjfx:javafx-graphics:11:$platform"
    compile "org.openjfx:javafx-controls:11:$platform"
    compile "org.openjfx:javafx-web:11:$platform"
    compile "org.openjfx:javafx-fxml:11:$platform"
    compile "org.openjfx:javafx-swing:11:$platform"
    compile "org.openjfx:javafx-media:11:$platform"
}

task downloadData {
    description = "Downloads data from AGOL for samples with offline data"

    def rootDir = "./"
    def dataZip = rootDir + 'data.zip'
    def samplesData = rootDir + 'samples-data'

    if (!file(samplesData).exists()) {
        ant.get(src: 'https://arcgisruntime.maps.arcgis' +
                '.com/sharing/rest/content/items/8b10b52320464b1bb728e552cfa6cb50/data', dest: dataZip)
        copy {
            from zipTree(dataZip)
            into(rootDir)
        }
        delete(dataZip)
    }
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'javafx.controls'
        ]
    }
}

run {
    mainClassName = project.hasProperty("mainClass") ? mainClass : 'com.esri.samples.map.display_map.DisplayMapSample'
    doFirst {
        jvmArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'javafx.controls,javafx.web,javafx.fxml'
        ]
    }
}

jar {
    // important to remove duplicates from each JavaFX platform dependency
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10'
}